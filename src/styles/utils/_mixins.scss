// Typography
@mixin h1 {
    @include font-size(var(--title-1));
    letter-spacing: -1px;
    line-height: 1.2;
    font-weight: var(--font-weight);

    @include media(small){
        letter-spacing: -0.5px;
    }
}
@mixin h2 {
    @include font-size(var(--title-2));
    letter-spacing: -1px;
    line-height: 1.2;
    font-weight: var(--font-weight);
}
@mixin h3 {
    @include font-size(var(--title-3));
    letter-spacing: 0;
    line-height: 1.1;
    font-weight: var(--font-weight);
}
@mixin h4 {
    @include font-size(var(--title-4));
    letter-spacing: 0;
    line-height: 1.4;
    font-weight: var(--font-weight);
}

@mixin p {
    @include font-size(var(--paragraph-text));
    line-height: 1.4;
    letter-spacing: 0;
    font-weight: var(--font-weight);
}

@mixin callout-text {
    @include font-size(var(--callout-text));
    line-height: 1.4;
    letter-spacing: 0;
    font-weight: var(--font-weight);
}

@mixin super-large-text {
    @include font-size(var(--super-large-text));
    line-height: 1;
    letter-spacing: 0;
    font-weight: var(--font-weight);
}

@mixin display-text {
    @include font-size(var(--display-text));
    line-height: 1;
    letter-spacing: -3px;
    font-weight: var(--font-weight);
}

// Mixin
@mixin font-size($font-size, $min-size: $min-font-size){
    font-size: max(responsive-size($font-size), $min-size);
}

// For media max-width
@mixin media($breakpoint, $orientation: "") {
    @if $orientation != "" {
        @media screen and (max-width: map-get($map: $breakpoints, $key: $breakpoint)) and (orientation: $orientation){
            @content;
        }
    }
    @else {
        @media screen and (max-width: map-get($map: $breakpoints, $key: $breakpoint)){
            @content;
        }
    }
    
}

// For media min-width
@mixin media-min-width($breakpoint) {
    // Add +1px to value to avoid conflict with max-width on given breakpoint
    $value: map-get($map: $breakpoints, $key: $breakpoint) + 1;

    @media screen and (min-width: $value){
        @content;
    }
}

// For media orientation portrait
@mixin media-portrait(){
    @media screen and (orientation: portrait){
        @content;
    }
}